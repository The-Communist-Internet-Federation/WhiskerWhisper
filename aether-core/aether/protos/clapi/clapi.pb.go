// Code generated by protoc-gen-go. DO NOT EDIT.
// source: clapi/clapi.proto

/*
Package clapi is a generated protocol buffer package.

It is generated from these files:
	clapi/clapi.proto

It has these top-level messages:
	FEReadyRequest
	FEReadyResponse
	AmbientsRequest
	AmbientsResponse
	InflightStatus
	InflightBoard
	InflightThread
	InflightPost
	InflightVote
	InflightKey
	InflightTruststate
	Inflights
	AmbientStatusPayload
	AmbientStatusResponse
	AmbientLocalUserEntityPayload
	AmbientLocalUserEntityResponse
	HomeViewPayload
	HomeViewResponse
	PopularViewPayload
	PopularViewResponse
	NewViewPayload
	NewViewResponse
	NotificationsPayload
	NotificationsResponse
	OnboardCompleteStatusPayload
	OnboardCompleteStatusResponse
	ModModeEnabledStatusPayload
	ModModeEnabledStatusResponse
	ExternalContentAutoloadDisabledStatusPayload
	ExternalContentAutoloadDisabledStatusResponse
	SearchResultPayload
	SearchResultResponse
*/
package clapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import feobjects "aether-core/aether/protos/feobjects"
import mimapi "aether-core/aether/protos/mimapi"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FEReadyRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Port    int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
}

func (m *FEReadyRequest) Reset()                    { *m = FEReadyRequest{} }
func (m *FEReadyRequest) String() string            { return proto.CompactTextString(m) }
func (*FEReadyRequest) ProtoMessage()               {}
func (*FEReadyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FEReadyRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *FEReadyRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type FEReadyResponse struct {
}

func (m *FEReadyResponse) Reset()                    { *m = FEReadyResponse{} }
func (m *FEReadyResponse) String() string            { return proto.CompactTextString(m) }
func (*FEReadyResponse) ProtoMessage()               {}
func (*FEReadyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// This delivers the updated ambients to the client.
type AmbientsRequest struct {
	Boards []*feobjects.AmbientBoardEntity `protobuf:"bytes,1,rep,name=Boards" json:"Boards,omitempty"`
}

func (m *AmbientsRequest) Reset()                    { *m = AmbientsRequest{} }
func (m *AmbientsRequest) String() string            { return proto.CompactTextString(m) }
func (*AmbientsRequest) ProtoMessage()               {}
func (*AmbientsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AmbientsRequest) GetBoards() []*feobjects.AmbientBoardEntity {
	if m != nil {
		return m.Boards
	}
	return nil
}

type AmbientsResponse struct {
}

func (m *AmbientsResponse) Reset()                    { *m = AmbientsResponse{} }
func (m *AmbientsResponse) String() string            { return proto.CompactTextString(m) }
func (*AmbientsResponse) ProtoMessage()               {}
func (*AmbientsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type InflightStatus struct {
	CompletionPercent   int32  `protobuf:"varint,1,opt,name=CompletionPercent" json:"CompletionPercent,omitempty"`
	StatusText          string `protobuf:"bytes,2,opt,name=StatusText" json:"StatusText,omitempty"`
	RequestedTimestamp  int64  `protobuf:"varint,4,opt,name=RequestedTimestamp" json:"RequestedTimestamp,omitempty"`
	LastActionTimestamp int64  `protobuf:"varint,5,opt,name=LastActionTimestamp" json:"LastActionTimestamp,omitempty"`
	EventType           string `protobuf:"bytes,6,opt,name=EventType" json:"EventType,omitempty"`
}

func (m *InflightStatus) Reset()                    { *m = InflightStatus{} }
func (m *InflightStatus) String() string            { return proto.CompactTextString(m) }
func (*InflightStatus) ProtoMessage()               {}
func (*InflightStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *InflightStatus) GetCompletionPercent() int32 {
	if m != nil {
		return m.CompletionPercent
	}
	return 0
}

func (m *InflightStatus) GetStatusText() string {
	if m != nil {
		return m.StatusText
	}
	return ""
}

func (m *InflightStatus) GetRequestedTimestamp() int64 {
	if m != nil {
		return m.RequestedTimestamp
	}
	return 0
}

func (m *InflightStatus) GetLastActionTimestamp() int64 {
	if m != nil {
		return m.LastActionTimestamp
	}
	return 0
}

func (m *InflightStatus) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

type InflightBoard struct {
	Status *InflightStatus `protobuf:"bytes,1,opt,name=Status" json:"Status,omitempty"`
	Entity *mimapi.Board   `protobuf:"bytes,2,opt,name=Entity" json:"Entity,omitempty"`
}

func (m *InflightBoard) Reset()                    { *m = InflightBoard{} }
func (m *InflightBoard) String() string            { return proto.CompactTextString(m) }
func (*InflightBoard) ProtoMessage()               {}
func (*InflightBoard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *InflightBoard) GetStatus() *InflightStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InflightBoard) GetEntity() *mimapi.Board {
	if m != nil {
		return m.Entity
	}
	return nil
}

type InflightThread struct {
	Status *InflightStatus `protobuf:"bytes,1,opt,name=Status" json:"Status,omitempty"`
	Entity *mimapi.Thread  `protobuf:"bytes,2,opt,name=Entity" json:"Entity,omitempty"`
}

func (m *InflightThread) Reset()                    { *m = InflightThread{} }
func (m *InflightThread) String() string            { return proto.CompactTextString(m) }
func (*InflightThread) ProtoMessage()               {}
func (*InflightThread) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *InflightThread) GetStatus() *InflightStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InflightThread) GetEntity() *mimapi.Thread {
	if m != nil {
		return m.Entity
	}
	return nil
}

type InflightPost struct {
	Status *InflightStatus `protobuf:"bytes,1,opt,name=Status" json:"Status,omitempty"`
	Entity *mimapi.Post    `protobuf:"bytes,2,opt,name=Entity" json:"Entity,omitempty"`
}

func (m *InflightPost) Reset()                    { *m = InflightPost{} }
func (m *InflightPost) String() string            { return proto.CompactTextString(m) }
func (*InflightPost) ProtoMessage()               {}
func (*InflightPost) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *InflightPost) GetStatus() *InflightStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InflightPost) GetEntity() *mimapi.Post {
	if m != nil {
		return m.Entity
	}
	return nil
}

type InflightVote struct {
	Status *InflightStatus `protobuf:"bytes,1,opt,name=Status" json:"Status,omitempty"`
	Entity *mimapi.Vote    `protobuf:"bytes,2,opt,name=Entity" json:"Entity,omitempty"`
}

func (m *InflightVote) Reset()                    { *m = InflightVote{} }
func (m *InflightVote) String() string            { return proto.CompactTextString(m) }
func (*InflightVote) ProtoMessage()               {}
func (*InflightVote) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *InflightVote) GetStatus() *InflightStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InflightVote) GetEntity() *mimapi.Vote {
	if m != nil {
		return m.Entity
	}
	return nil
}

type InflightKey struct {
	Status *InflightStatus `protobuf:"bytes,1,opt,name=Status" json:"Status,omitempty"`
	Entity *mimapi.Key     `protobuf:"bytes,2,opt,name=Entity" json:"Entity,omitempty"`
}

func (m *InflightKey) Reset()                    { *m = InflightKey{} }
func (m *InflightKey) String() string            { return proto.CompactTextString(m) }
func (*InflightKey) ProtoMessage()               {}
func (*InflightKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *InflightKey) GetStatus() *InflightStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InflightKey) GetEntity() *mimapi.Key {
	if m != nil {
		return m.Entity
	}
	return nil
}

type InflightTruststate struct {
	Status *InflightStatus    `protobuf:"bytes,1,opt,name=Status" json:"Status,omitempty"`
	Entity *mimapi.Truststate `protobuf:"bytes,2,opt,name=Entity" json:"Entity,omitempty"`
}

func (m *InflightTruststate) Reset()                    { *m = InflightTruststate{} }
func (m *InflightTruststate) String() string            { return proto.CompactTextString(m) }
func (*InflightTruststate) ProtoMessage()               {}
func (*InflightTruststate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *InflightTruststate) GetStatus() *InflightStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InflightTruststate) GetEntity() *mimapi.Truststate {
	if m != nil {
		return m.Entity
	}
	return nil
}

// The objects currently being processed.
type Inflights struct {
	Boards      []*InflightBoard      `protobuf:"bytes,1,rep,name=Boards" json:"Boards,omitempty"`
	Threads     []*InflightThread     `protobuf:"bytes,2,rep,name=Threads" json:"Threads,omitempty"`
	Posts       []*InflightPost       `protobuf:"bytes,3,rep,name=Posts" json:"Posts,omitempty"`
	Votes       []*InflightVote       `protobuf:"bytes,4,rep,name=Votes" json:"Votes,omitempty"`
	Keys        []*InflightKey        `protobuf:"bytes,5,rep,name=Keys" json:"Keys,omitempty"`
	Truststates []*InflightTruststate `protobuf:"bytes,6,rep,name=Truststates" json:"Truststates,omitempty"`
}

func (m *Inflights) Reset()                    { *m = Inflights{} }
func (m *Inflights) String() string            { return proto.CompactTextString(m) }
func (*Inflights) ProtoMessage()               {}
func (*Inflights) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Inflights) GetBoards() []*InflightBoard {
	if m != nil {
		return m.Boards
	}
	return nil
}

func (m *Inflights) GetThreads() []*InflightThread {
	if m != nil {
		return m.Threads
	}
	return nil
}

func (m *Inflights) GetPosts() []*InflightPost {
	if m != nil {
		return m.Posts
	}
	return nil
}

func (m *Inflights) GetVotes() []*InflightVote {
	if m != nil {
		return m.Votes
	}
	return nil
}

func (m *Inflights) GetKeys() []*InflightKey {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Inflights) GetTruststates() []*InflightTruststate {
	if m != nil {
		return m.Truststates
	}
	return nil
}

type AmbientStatusPayload struct {
	// Health data from the backend, only provided to its admin frontend
	BackendAmbientStatus *feobjects.BackendAmbientStatus `protobuf:"bytes,1,opt,name=BackendAmbientStatus" json:"BackendAmbientStatus,omitempty"`
	// Health data from the frontend
	FrontendAmbientStatus *feobjects.FrontendAmbientStatus `protobuf:"bytes,2,opt,name=FrontendAmbientStatus" json:"FrontendAmbientStatus,omitempty"`
	// Lisf ot items currently being processed
	Inflights *Inflights `protobuf:"bytes,3,opt,name=Inflights" json:"Inflights,omitempty"`
}

func (m *AmbientStatusPayload) Reset()                    { *m = AmbientStatusPayload{} }
func (m *AmbientStatusPayload) String() string            { return proto.CompactTextString(m) }
func (*AmbientStatusPayload) ProtoMessage()               {}
func (*AmbientStatusPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AmbientStatusPayload) GetBackendAmbientStatus() *feobjects.BackendAmbientStatus {
	if m != nil {
		return m.BackendAmbientStatus
	}
	return nil
}

func (m *AmbientStatusPayload) GetFrontendAmbientStatus() *feobjects.FrontendAmbientStatus {
	if m != nil {
		return m.FrontendAmbientStatus
	}
	return nil
}

func (m *AmbientStatusPayload) GetInflights() *Inflights {
	if m != nil {
		return m.Inflights
	}
	return nil
}

type AmbientStatusResponse struct {
}

func (m *AmbientStatusResponse) Reset()                    { *m = AmbientStatusResponse{} }
func (m *AmbientStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*AmbientStatusResponse) ProtoMessage()               {}
func (*AmbientStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type AmbientLocalUserEntityPayload struct {
	LocalUserExists bool                          `protobuf:"varint,1,opt,name=LocalUserExists" json:"LocalUserExists,omitempty"`
	LocalUserEntity *feobjects.CompiledUserEntity `protobuf:"bytes,2,opt,name=LocalUserEntity" json:"LocalUserEntity,omitempty"`
}

func (m *AmbientLocalUserEntityPayload) Reset()                    { *m = AmbientLocalUserEntityPayload{} }
func (m *AmbientLocalUserEntityPayload) String() string            { return proto.CompactTextString(m) }
func (*AmbientLocalUserEntityPayload) ProtoMessage()               {}
func (*AmbientLocalUserEntityPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AmbientLocalUserEntityPayload) GetLocalUserExists() bool {
	if m != nil {
		return m.LocalUserExists
	}
	return false
}

func (m *AmbientLocalUserEntityPayload) GetLocalUserEntity() *feobjects.CompiledUserEntity {
	if m != nil {
		return m.LocalUserEntity
	}
	return nil
}

type AmbientLocalUserEntityResponse struct {
}

func (m *AmbientLocalUserEntityResponse) Reset()                    { *m = AmbientLocalUserEntityResponse{} }
func (m *AmbientLocalUserEntityResponse) String() string            { return proto.CompactTextString(m) }
func (*AmbientLocalUserEntityResponse) ProtoMessage()               {}
func (*AmbientLocalUserEntityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type HomeViewPayload struct {
	Threads []*feobjects.CompiledThreadEntity `protobuf:"bytes,1,rep,name=Threads" json:"Threads,omitempty"`
}

func (m *HomeViewPayload) Reset()                    { *m = HomeViewPayload{} }
func (m *HomeViewPayload) String() string            { return proto.CompactTextString(m) }
func (*HomeViewPayload) ProtoMessage()               {}
func (*HomeViewPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *HomeViewPayload) GetThreads() []*feobjects.CompiledThreadEntity {
	if m != nil {
		return m.Threads
	}
	return nil
}

type HomeViewResponse struct {
}

func (m *HomeViewResponse) Reset()                    { *m = HomeViewResponse{} }
func (m *HomeViewResponse) String() string            { return proto.CompactTextString(m) }
func (*HomeViewResponse) ProtoMessage()               {}
func (*HomeViewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type PopularViewPayload struct {
	Threads []*feobjects.CompiledThreadEntity `protobuf:"bytes,1,rep,name=Threads" json:"Threads,omitempty"`
}

func (m *PopularViewPayload) Reset()                    { *m = PopularViewPayload{} }
func (m *PopularViewPayload) String() string            { return proto.CompactTextString(m) }
func (*PopularViewPayload) ProtoMessage()               {}
func (*PopularViewPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *PopularViewPayload) GetThreads() []*feobjects.CompiledThreadEntity {
	if m != nil {
		return m.Threads
	}
	return nil
}

type PopularViewResponse struct {
}

func (m *PopularViewResponse) Reset()                    { *m = PopularViewResponse{} }
func (m *PopularViewResponse) String() string            { return proto.CompactTextString(m) }
func (*PopularViewResponse) ProtoMessage()               {}
func (*PopularViewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type NewViewPayload struct {
	Threads []*feobjects.CompiledThreadEntity `protobuf:"bytes,1,rep,name=Threads" json:"Threads,omitempty"`
	Posts   []*feobjects.CompiledPostEntity   `protobuf:"bytes,2,rep,name=Posts" json:"Posts,omitempty"`
}

func (m *NewViewPayload) Reset()                    { *m = NewViewPayload{} }
func (m *NewViewPayload) String() string            { return proto.CompactTextString(m) }
func (*NewViewPayload) ProtoMessage()               {}
func (*NewViewPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *NewViewPayload) GetThreads() []*feobjects.CompiledThreadEntity {
	if m != nil {
		return m.Threads
	}
	return nil
}

func (m *NewViewPayload) GetPosts() []*feobjects.CompiledPostEntity {
	if m != nil {
		return m.Posts
	}
	return nil
}

type NewViewResponse struct {
}

func (m *NewViewResponse) Reset()                    { *m = NewViewResponse{} }
func (m *NewViewResponse) String() string            { return proto.CompactTextString(m) }
func (*NewViewResponse) ProtoMessage()               {}
func (*NewViewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type NotificationsPayload struct {
	Notifications []*feobjects.CompiledNotification `protobuf:"bytes,1,rep,name=Notifications" json:"Notifications,omitempty"`
	LastSeen      int64                             `protobuf:"varint,2,opt,name=LastSeen" json:"LastSeen,omitempty"`
}

func (m *NotificationsPayload) Reset()                    { *m = NotificationsPayload{} }
func (m *NotificationsPayload) String() string            { return proto.CompactTextString(m) }
func (*NotificationsPayload) ProtoMessage()               {}
func (*NotificationsPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *NotificationsPayload) GetNotifications() []*feobjects.CompiledNotification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

func (m *NotificationsPayload) GetLastSeen() int64 {
	if m != nil {
		return m.LastSeen
	}
	return 0
}

type NotificationsResponse struct {
}

func (m *NotificationsResponse) Reset()                    { *m = NotificationsResponse{} }
func (m *NotificationsResponse) String() string            { return proto.CompactTextString(m) }
func (*NotificationsResponse) ProtoMessage()               {}
func (*NotificationsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type OnboardCompleteStatusPayload struct {
	OnboardComplete bool `protobuf:"varint,1,opt,name=OnboardComplete" json:"OnboardComplete,omitempty"`
}

func (m *OnboardCompleteStatusPayload) Reset()                    { *m = OnboardCompleteStatusPayload{} }
func (m *OnboardCompleteStatusPayload) String() string            { return proto.CompactTextString(m) }
func (*OnboardCompleteStatusPayload) ProtoMessage()               {}
func (*OnboardCompleteStatusPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *OnboardCompleteStatusPayload) GetOnboardComplete() bool {
	if m != nil {
		return m.OnboardComplete
	}
	return false
}

type OnboardCompleteStatusResponse struct {
}

func (m *OnboardCompleteStatusResponse) Reset()                    { *m = OnboardCompleteStatusResponse{} }
func (m *OnboardCompleteStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*OnboardCompleteStatusResponse) ProtoMessage()               {}
func (*OnboardCompleteStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type ModModeEnabledStatusPayload struct {
	ModModeEnabled bool `protobuf:"varint,1,opt,name=ModModeEnabled" json:"ModModeEnabled,omitempty"`
}

func (m *ModModeEnabledStatusPayload) Reset()                    { *m = ModModeEnabledStatusPayload{} }
func (m *ModModeEnabledStatusPayload) String() string            { return proto.CompactTextString(m) }
func (*ModModeEnabledStatusPayload) ProtoMessage()               {}
func (*ModModeEnabledStatusPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ModModeEnabledStatusPayload) GetModModeEnabled() bool {
	if m != nil {
		return m.ModModeEnabled
	}
	return false
}

type ModModeEnabledStatusResponse struct {
}

func (m *ModModeEnabledStatusResponse) Reset()                    { *m = ModModeEnabledStatusResponse{} }
func (m *ModModeEnabledStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*ModModeEnabledStatusResponse) ProtoMessage()               {}
func (*ModModeEnabledStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

type ExternalContentAutoloadDisabledStatusPayload struct {
	ExternalContentAutoloadDisabled bool `protobuf:"varint,1,opt,name=ExternalContentAutoloadDisabled" json:"ExternalContentAutoloadDisabled,omitempty"`
}

func (m *ExternalContentAutoloadDisabledStatusPayload) Reset() {
	*m = ExternalContentAutoloadDisabledStatusPayload{}
}
func (m *ExternalContentAutoloadDisabledStatusPayload) String() string {
	return proto.CompactTextString(m)
}
func (*ExternalContentAutoloadDisabledStatusPayload) ProtoMessage() {}
func (*ExternalContentAutoloadDisabledStatusPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{28}
}

func (m *ExternalContentAutoloadDisabledStatusPayload) GetExternalContentAutoloadDisabled() bool {
	if m != nil {
		return m.ExternalContentAutoloadDisabled
	}
	return false
}

type ExternalContentAutoloadDisabledStatusResponse struct {
}

func (m *ExternalContentAutoloadDisabledStatusResponse) Reset() {
	*m = ExternalContentAutoloadDisabledStatusResponse{}
}
func (m *ExternalContentAutoloadDisabledStatusResponse) String() string {
	return proto.CompactTextString(m)
}
func (*ExternalContentAutoloadDisabledStatusResponse) ProtoMessage() {}
func (*ExternalContentAutoloadDisabledStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{29}
}

type SearchResultPayload struct {
	SearchType string                            `protobuf:"bytes,1,opt,name=SearchType" json:"SearchType,omitempty"`
	Boards     []*feobjects.CompiledBoardEntity  `protobuf:"bytes,2,rep,name=Boards" json:"Boards,omitempty"`
	Threads    []*feobjects.CompiledThreadEntity `protobuf:"bytes,3,rep,name=Threads" json:"Threads,omitempty"`
	Posts      []*feobjects.CompiledPostEntity   `protobuf:"bytes,4,rep,name=Posts" json:"Posts,omitempty"`
	Users      []*feobjects.CompiledUserEntity   `protobuf:"bytes,5,rep,name=Users" json:"Users,omitempty"`
}

func (m *SearchResultPayload) Reset()                    { *m = SearchResultPayload{} }
func (m *SearchResultPayload) String() string            { return proto.CompactTextString(m) }
func (*SearchResultPayload) ProtoMessage()               {}
func (*SearchResultPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *SearchResultPayload) GetSearchType() string {
	if m != nil {
		return m.SearchType
	}
	return ""
}

func (m *SearchResultPayload) GetBoards() []*feobjects.CompiledBoardEntity {
	if m != nil {
		return m.Boards
	}
	return nil
}

func (m *SearchResultPayload) GetThreads() []*feobjects.CompiledThreadEntity {
	if m != nil {
		return m.Threads
	}
	return nil
}

func (m *SearchResultPayload) GetPosts() []*feobjects.CompiledPostEntity {
	if m != nil {
		return m.Posts
	}
	return nil
}

func (m *SearchResultPayload) GetUsers() []*feobjects.CompiledUserEntity {
	if m != nil {
		return m.Users
	}
	return nil
}

type SearchResultResponse struct {
}

func (m *SearchResultResponse) Reset()                    { *m = SearchResultResponse{} }
func (m *SearchResultResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResultResponse) ProtoMessage()               {}
func (*SearchResultResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func init() {
	proto.RegisterType((*FEReadyRequest)(nil), "clapi.FEReadyRequest")
	proto.RegisterType((*FEReadyResponse)(nil), "clapi.FEReadyResponse")
	proto.RegisterType((*AmbientsRequest)(nil), "clapi.AmbientsRequest")
	proto.RegisterType((*AmbientsResponse)(nil), "clapi.AmbientsResponse")
	proto.RegisterType((*InflightStatus)(nil), "clapi.InflightStatus")
	proto.RegisterType((*InflightBoard)(nil), "clapi.InflightBoard")
	proto.RegisterType((*InflightThread)(nil), "clapi.InflightThread")
	proto.RegisterType((*InflightPost)(nil), "clapi.InflightPost")
	proto.RegisterType((*InflightVote)(nil), "clapi.InflightVote")
	proto.RegisterType((*InflightKey)(nil), "clapi.InflightKey")
	proto.RegisterType((*InflightTruststate)(nil), "clapi.InflightTruststate")
	proto.RegisterType((*Inflights)(nil), "clapi.Inflights")
	proto.RegisterType((*AmbientStatusPayload)(nil), "clapi.AmbientStatusPayload")
	proto.RegisterType((*AmbientStatusResponse)(nil), "clapi.AmbientStatusResponse")
	proto.RegisterType((*AmbientLocalUserEntityPayload)(nil), "clapi.AmbientLocalUserEntityPayload")
	proto.RegisterType((*AmbientLocalUserEntityResponse)(nil), "clapi.AmbientLocalUserEntityResponse")
	proto.RegisterType((*HomeViewPayload)(nil), "clapi.HomeViewPayload")
	proto.RegisterType((*HomeViewResponse)(nil), "clapi.HomeViewResponse")
	proto.RegisterType((*PopularViewPayload)(nil), "clapi.PopularViewPayload")
	proto.RegisterType((*PopularViewResponse)(nil), "clapi.PopularViewResponse")
	proto.RegisterType((*NewViewPayload)(nil), "clapi.NewViewPayload")
	proto.RegisterType((*NewViewResponse)(nil), "clapi.NewViewResponse")
	proto.RegisterType((*NotificationsPayload)(nil), "clapi.NotificationsPayload")
	proto.RegisterType((*NotificationsResponse)(nil), "clapi.NotificationsResponse")
	proto.RegisterType((*OnboardCompleteStatusPayload)(nil), "clapi.OnboardCompleteStatusPayload")
	proto.RegisterType((*OnboardCompleteStatusResponse)(nil), "clapi.OnboardCompleteStatusResponse")
	proto.RegisterType((*ModModeEnabledStatusPayload)(nil), "clapi.ModModeEnabledStatusPayload")
	proto.RegisterType((*ModModeEnabledStatusResponse)(nil), "clapi.ModModeEnabledStatusResponse")
	proto.RegisterType((*ExternalContentAutoloadDisabledStatusPayload)(nil), "clapi.ExternalContentAutoloadDisabledStatusPayload")
	proto.RegisterType((*ExternalContentAutoloadDisabledStatusResponse)(nil), "clapi.ExternalContentAutoloadDisabledStatusResponse")
	proto.RegisterType((*SearchResultPayload)(nil), "clapi.SearchResultPayload")
	proto.RegisterType((*SearchResultResponse)(nil), "clapi.SearchResultResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ClientAPI service

type ClientAPIClient interface {
	// ----------  Methods used by frontend  ----------
	FrontendReady(ctx context.Context, in *FEReadyRequest, opts ...grpc.CallOption) (*FEReadyResponse, error)
	DeliverAmbients(ctx context.Context, in *AmbientsRequest, opts ...grpc.CallOption) (*AmbientsResponse, error)
	// ^ Ambient *entities*. This is poorly named, we should make it more specific
	SendAmbientStatus(ctx context.Context, in *AmbientStatusPayload, opts ...grpc.CallOption) (*AmbientStatusResponse, error)
	// ^ Ambient *status* (fe, be status)
	SendAmbientLocalUserEntity(ctx context.Context, in *AmbientLocalUserEntityPayload, opts ...grpc.CallOption) (*AmbientLocalUserEntityResponse, error)
	SendHomeView(ctx context.Context, in *HomeViewPayload, opts ...grpc.CallOption) (*HomeViewResponse, error)
	SendPopularView(ctx context.Context, in *PopularViewPayload, opts ...grpc.CallOption) (*PopularViewResponse, error)
	SendNewView(ctx context.Context, in *NewViewPayload, opts ...grpc.CallOption) (*NewViewResponse, error)
	SendNotifications(ctx context.Context, in *NotificationsPayload, opts ...grpc.CallOption) (*NotificationsResponse, error)
	SendOnboardCompleteStatus(ctx context.Context, in *OnboardCompleteStatusPayload, opts ...grpc.CallOption) (*OnboardCompleteStatusResponse, error)
	SendModModeEnabledStatus(ctx context.Context, in *ModModeEnabledStatusPayload, opts ...grpc.CallOption) (*ModModeEnabledStatusResponse, error)
	SendExternalContentAutoloadDisabledStatus(ctx context.Context, in *ExternalContentAutoloadDisabledStatusPayload, opts ...grpc.CallOption) (*ExternalContentAutoloadDisabledStatusResponse, error)
	SendSearchResult(ctx context.Context, in *SearchResultPayload, opts ...grpc.CallOption) (*SearchResultResponse, error)
}

type clientAPIClient struct {
	cc *grpc.ClientConn
}

func NewClientAPIClient(cc *grpc.ClientConn) ClientAPIClient {
	return &clientAPIClient{cc}
}

func (c *clientAPIClient) FrontendReady(ctx context.Context, in *FEReadyRequest, opts ...grpc.CallOption) (*FEReadyResponse, error) {
	out := new(FEReadyResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/FrontendReady", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) DeliverAmbients(ctx context.Context, in *AmbientsRequest, opts ...grpc.CallOption) (*AmbientsResponse, error) {
	out := new(AmbientsResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/DeliverAmbients", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) SendAmbientStatus(ctx context.Context, in *AmbientStatusPayload, opts ...grpc.CallOption) (*AmbientStatusResponse, error) {
	out := new(AmbientStatusResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/SendAmbientStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) SendAmbientLocalUserEntity(ctx context.Context, in *AmbientLocalUserEntityPayload, opts ...grpc.CallOption) (*AmbientLocalUserEntityResponse, error) {
	out := new(AmbientLocalUserEntityResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/SendAmbientLocalUserEntity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) SendHomeView(ctx context.Context, in *HomeViewPayload, opts ...grpc.CallOption) (*HomeViewResponse, error) {
	out := new(HomeViewResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/SendHomeView", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) SendPopularView(ctx context.Context, in *PopularViewPayload, opts ...grpc.CallOption) (*PopularViewResponse, error) {
	out := new(PopularViewResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/SendPopularView", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) SendNewView(ctx context.Context, in *NewViewPayload, opts ...grpc.CallOption) (*NewViewResponse, error) {
	out := new(NewViewResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/SendNewView", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) SendNotifications(ctx context.Context, in *NotificationsPayload, opts ...grpc.CallOption) (*NotificationsResponse, error) {
	out := new(NotificationsResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/SendNotifications", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) SendOnboardCompleteStatus(ctx context.Context, in *OnboardCompleteStatusPayload, opts ...grpc.CallOption) (*OnboardCompleteStatusResponse, error) {
	out := new(OnboardCompleteStatusResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/SendOnboardCompleteStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) SendModModeEnabledStatus(ctx context.Context, in *ModModeEnabledStatusPayload, opts ...grpc.CallOption) (*ModModeEnabledStatusResponse, error) {
	out := new(ModModeEnabledStatusResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/SendModModeEnabledStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) SendExternalContentAutoloadDisabledStatus(ctx context.Context, in *ExternalContentAutoloadDisabledStatusPayload, opts ...grpc.CallOption) (*ExternalContentAutoloadDisabledStatusResponse, error) {
	out := new(ExternalContentAutoloadDisabledStatusResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/SendExternalContentAutoloadDisabledStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientAPIClient) SendSearchResult(ctx context.Context, in *SearchResultPayload, opts ...grpc.CallOption) (*SearchResultResponse, error) {
	out := new(SearchResultResponse)
	err := grpc.Invoke(ctx, "/clapi.ClientAPI/SendSearchResult", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ClientAPI service

type ClientAPIServer interface {
	// ----------  Methods used by frontend  ----------
	FrontendReady(context.Context, *FEReadyRequest) (*FEReadyResponse, error)
	DeliverAmbients(context.Context, *AmbientsRequest) (*AmbientsResponse, error)
	// ^ Ambient *entities*. This is poorly named, we should make it more specific
	SendAmbientStatus(context.Context, *AmbientStatusPayload) (*AmbientStatusResponse, error)
	// ^ Ambient *status* (fe, be status)
	SendAmbientLocalUserEntity(context.Context, *AmbientLocalUserEntityPayload) (*AmbientLocalUserEntityResponse, error)
	SendHomeView(context.Context, *HomeViewPayload) (*HomeViewResponse, error)
	SendPopularView(context.Context, *PopularViewPayload) (*PopularViewResponse, error)
	SendNewView(context.Context, *NewViewPayload) (*NewViewResponse, error)
	SendNotifications(context.Context, *NotificationsPayload) (*NotificationsResponse, error)
	SendOnboardCompleteStatus(context.Context, *OnboardCompleteStatusPayload) (*OnboardCompleteStatusResponse, error)
	SendModModeEnabledStatus(context.Context, *ModModeEnabledStatusPayload) (*ModModeEnabledStatusResponse, error)
	SendExternalContentAutoloadDisabledStatus(context.Context, *ExternalContentAutoloadDisabledStatusPayload) (*ExternalContentAutoloadDisabledStatusResponse, error)
	SendSearchResult(context.Context, *SearchResultPayload) (*SearchResultResponse, error)
}

func RegisterClientAPIServer(s *grpc.Server, srv ClientAPIServer) {
	s.RegisterService(&_ClientAPI_serviceDesc, srv)
}

func _ClientAPI_FrontendReady_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FEReadyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).FrontendReady(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/FrontendReady",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).FrontendReady(ctx, req.(*FEReadyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_DeliverAmbients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AmbientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).DeliverAmbients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/DeliverAmbients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).DeliverAmbients(ctx, req.(*AmbientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_SendAmbientStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AmbientStatusPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).SendAmbientStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/SendAmbientStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).SendAmbientStatus(ctx, req.(*AmbientStatusPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_SendAmbientLocalUserEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AmbientLocalUserEntityPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).SendAmbientLocalUserEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/SendAmbientLocalUserEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).SendAmbientLocalUserEntity(ctx, req.(*AmbientLocalUserEntityPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_SendHomeView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HomeViewPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).SendHomeView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/SendHomeView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).SendHomeView(ctx, req.(*HomeViewPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_SendPopularView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PopularViewPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).SendPopularView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/SendPopularView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).SendPopularView(ctx, req.(*PopularViewPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_SendNewView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewViewPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).SendNewView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/SendNewView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).SendNewView(ctx, req.(*NewViewPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_SendNotifications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotificationsPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).SendNotifications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/SendNotifications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).SendNotifications(ctx, req.(*NotificationsPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_SendOnboardCompleteStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OnboardCompleteStatusPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).SendOnboardCompleteStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/SendOnboardCompleteStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).SendOnboardCompleteStatus(ctx, req.(*OnboardCompleteStatusPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_SendModModeEnabledStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModModeEnabledStatusPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).SendModModeEnabledStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/SendModModeEnabledStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).SendModModeEnabledStatus(ctx, req.(*ModModeEnabledStatusPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_SendExternalContentAutoloadDisabledStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExternalContentAutoloadDisabledStatusPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).SendExternalContentAutoloadDisabledStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/SendExternalContentAutoloadDisabledStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).SendExternalContentAutoloadDisabledStatus(ctx, req.(*ExternalContentAutoloadDisabledStatusPayload))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientAPI_SendSearchResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchResultPayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientAPIServer).SendSearchResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clapi.ClientAPI/SendSearchResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientAPIServer).SendSearchResult(ctx, req.(*SearchResultPayload))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clapi.ClientAPI",
	HandlerType: (*ClientAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FrontendReady",
			Handler:    _ClientAPI_FrontendReady_Handler,
		},
		{
			MethodName: "DeliverAmbients",
			Handler:    _ClientAPI_DeliverAmbients_Handler,
		},
		{
			MethodName: "SendAmbientStatus",
			Handler:    _ClientAPI_SendAmbientStatus_Handler,
		},
		{
			MethodName: "SendAmbientLocalUserEntity",
			Handler:    _ClientAPI_SendAmbientLocalUserEntity_Handler,
		},
		{
			MethodName: "SendHomeView",
			Handler:    _ClientAPI_SendHomeView_Handler,
		},
		{
			MethodName: "SendPopularView",
			Handler:    _ClientAPI_SendPopularView_Handler,
		},
		{
			MethodName: "SendNewView",
			Handler:    _ClientAPI_SendNewView_Handler,
		},
		{
			MethodName: "SendNotifications",
			Handler:    _ClientAPI_SendNotifications_Handler,
		},
		{
			MethodName: "SendOnboardCompleteStatus",
			Handler:    _ClientAPI_SendOnboardCompleteStatus_Handler,
		},
		{
			MethodName: "SendModModeEnabledStatus",
			Handler:    _ClientAPI_SendModModeEnabledStatus_Handler,
		},
		{
			MethodName: "SendExternalContentAutoloadDisabledStatus",
			Handler:    _ClientAPI_SendExternalContentAutoloadDisabledStatus_Handler,
		},
		{
			MethodName: "SendSearchResult",
			Handler:    _ClientAPI_SendSearchResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "clapi/clapi.proto",
}

func init() { proto.RegisterFile("clapi/clapi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xdd, 0x52, 0xdb, 0x46,
	0x14, 0x8e, 0x31, 0x76, 0xc2, 0x71, 0xc0, 0xb0, 0x40, 0x22, 0xc4, 0x6f, 0x05, 0x61, 0x9c, 0x4e,
	0xb0, 0x3b, 0xd0, 0x76, 0xa6, 0xd3, 0x99, 0x4c, 0xf9, 0x71, 0x4a, 0x0a, 0x24, 0x1e, 0x41, 0xb9,
	0xe8, 0x9d, 0xb0, 0x97, 0xa0, 0x46, 0x96, 0x5c, 0xed, 0x3a, 0xc1, 0x77, 0x7d, 0x86, 0x5e, 0xf5,
	0x05, 0x7a, 0xdb, 0x47, 0xea, 0x4b, 0xf4, 0x05, 0x3a, 0xfb, 0xab, 0x1f, 0xef, 0x18, 0xdc, 0xe1,
	0x06, 0xa4, 0xdd, 0xef, 0x7c, 0xdf, 0xd1, 0x39, 0xbb, 0xdf, 0x2e, 0xc0, 0x5c, 0x3b, 0xf0, 0x7a,
	0x7e, 0x83, 0xff, 0xac, 0xf7, 0xe2, 0x88, 0x46, 0xa8, 0xc4, 0x5f, 0xec, 0xa5, 0x6b, 0x1c, 0x5d,
	0xfd, 0x8a, 0xdb, 0x94, 0x34, 0xf4, 0x93, 0x40, 0xd8, 0xf3, 0x5d, 0xbf, 0xcb, 0xa2, 0xc4, 0x2f,
	0x31, 0xe8, 0xbc, 0x86, 0x99, 0x37, 0x4d, 0x17, 0x7b, 0x9d, 0x81, 0x8b, 0x7f, 0xeb, 0x63, 0x42,
	0x91, 0x05, 0x8f, 0xbd, 0x4e, 0x27, 0xc6, 0x84, 0x58, 0x85, 0x8d, 0x42, 0x6d, 0xca, 0x55, 0xaf,
	0x08, 0xc1, 0x64, 0x2f, 0x8a, 0xa9, 0x35, 0xb1, 0x51, 0xa8, 0x95, 0x5c, 0xfe, 0xec, 0xcc, 0x41,
	0x55, 0xc7, 0x93, 0x5e, 0x14, 0x12, 0xec, 0x1c, 0x43, 0x75, 0xbf, 0x7b, 0xe5, 0xe3, 0x90, 0x12,
	0xc5, 0xf9, 0x0d, 0x94, 0x0f, 0x22, 0x2f, 0xee, 0x30, 0xca, 0x62, 0xad, 0xb2, 0xbb, 0x5a, 0x4f,
	0x92, 0x93, 0x58, 0x3e, 0xdf, 0x0c, 0xa9, 0x4f, 0x07, 0xae, 0x04, 0x3b, 0x08, 0x66, 0x13, 0x26,
	0xc9, 0xfe, 0x4f, 0x01, 0x66, 0xde, 0x86, 0xd7, 0x81, 0xff, 0xe1, 0x86, 0x9e, 0x53, 0x8f, 0xf6,
	0x09, 0x7a, 0x05, 0x73, 0x87, 0x51, 0xb7, 0x17, 0x60, 0xea, 0x47, 0x61, 0x0b, 0xc7, 0x6d, 0x1c,
	0x52, 0x9e, 0x7b, 0xc9, 0x1d, 0x9e, 0x40, 0x6b, 0x00, 0x22, 0xee, 0x02, 0xdf, 0x8a, 0x6f, 0x99,
	0x72, 0x53, 0x23, 0xa8, 0x0e, 0x48, 0xa6, 0x8d, 0x3b, 0x17, 0x7e, 0x17, 0x13, 0xea, 0x75, 0x7b,
	0xd6, 0xe4, 0x46, 0xa1, 0x56, 0x74, 0x0d, 0x33, 0xe8, 0x2b, 0x98, 0x3f, 0xf5, 0x08, 0xdd, 0x6f,
	0x33, 0x91, 0x24, 0xa0, 0xc4, 0x03, 0x4c, 0x53, 0x68, 0x05, 0xa6, 0x9a, 0x9f, 0x70, 0x48, 0x2f,
	0x06, 0x3d, 0x6c, 0x95, 0x79, 0x02, 0xc9, 0x80, 0x83, 0x61, 0x5a, 0x7d, 0x1f, 0x2f, 0x03, 0xda,
	0x81, 0xb2, 0x48, 0x8f, 0x7f, 0x53, 0x65, 0x77, 0xb1, 0x2e, 0xfa, 0x9e, 0xad, 0x82, 0x2b, 0x41,
	0xe8, 0x05, 0x94, 0x45, 0x19, 0xf9, 0xb7, 0x55, 0x76, 0xa7, 0xeb, 0xb2, 0xe1, 0x9c, 0xcd, 0x95,
	0x93, 0xce, 0x87, 0xa4, 0x8c, 0x17, 0x37, 0x31, 0xf6, 0xc6, 0xd6, 0xd9, 0xce, 0xe9, 0xcc, 0x28,
	0x1d, 0x41, 0xa7, 0x85, 0xda, 0xf0, 0x54, 0x31, 0xb4, 0x22, 0x42, 0xc7, 0x95, 0xd9, 0xca, 0xc9,
	0x3c, 0x55, 0x32, 0x8c, 0xcc, 0x24, 0x72, 0x19, 0x51, 0xfc, 0x60, 0x22, 0x8c, 0x4c, 0x8b, 0x78,
	0x50, 0x51, 0xf1, 0x27, 0x78, 0x30, 0xae, 0xc6, 0x66, 0x4e, 0xa3, 0xa2, 0x34, 0x4e, 0xf0, 0x40,
	0x4b, 0x44, 0x80, 0x74, 0x57, 0xe2, 0x3e, 0xa1, 0x84, 0x7a, 0xe3, 0x7f, 0xcd, 0x97, 0x39, 0x25,
	0xa4, 0x3b, 0xa3, 0x29, 0xb5, 0xe0, 0x5f, 0x13, 0x30, 0xa5, 0x68, 0xd8, 0x4e, 0xca, 0xee, 0xd3,
	0x85, 0x9c, 0x90, 0x5c, 0x42, 0x02, 0x83, 0x1a, 0xf0, 0x58, 0xf4, 0x9a, 0x58, 0x13, 0x1c, 0x9e,
	0xcf, 0x4b, 0xae, 0x04, 0x85, 0x42, 0x2f, 0xa1, 0xc4, 0xba, 0x46, 0xac, 0x22, 0x87, 0xcf, 0xe7,
	0xe0, 0xbc, 0xa3, 0x02, 0xc1, 0xa0, 0xac, 0xf6, 0xc4, 0x9a, 0x34, 0x42, 0x79, 0x5f, 0x04, 0x02,
	0x6d, 0xc3, 0xe4, 0x09, 0x1e, 0x10, 0xab, 0xc4, 0x91, 0x28, 0x87, 0x64, 0xd5, 0xe5, 0xf3, 0xe8,
	0x7b, 0xa8, 0x24, 0x05, 0x20, 0x56, 0x99, 0xc3, 0x97, 0xf2, 0x29, 0x27, 0x25, 0x4a, 0xa3, 0x9d,
	0x7f, 0x0b, 0xb0, 0x20, 0xbd, 0x48, 0x54, 0xb9, 0xe5, 0x0d, 0x82, 0xc8, 0xeb, 0xa0, 0x73, 0x58,
	0x38, 0xf0, 0xda, 0x1f, 0x71, 0xd8, 0xc9, 0x4c, 0xcb, 0x4e, 0xad, 0xa7, 0x8c, 0xce, 0x04, 0x73,
	0x8d, 0xc1, 0xe8, 0x12, 0x16, 0xdf, 0xc4, 0x51, 0x48, 0x87, 0x58, 0x45, 0x43, 0x37, 0x52, 0xac,
	0x46, 0x9c, 0x6b, 0x0e, 0x47, 0xf5, 0x54, 0xb3, 0xad, 0x22, 0xe7, 0x9a, 0xcd, 0x15, 0x80, 0xb8,
	0x09, 0xc4, 0x79, 0x0e, 0x8b, 0x59, 0x5e, 0xe5, 0xc2, 0x7f, 0x14, 0x60, 0x55, 0xce, 0x9c, 0x46,
	0x6d, 0x2f, 0xf8, 0x99, 0xe0, 0x58, 0xac, 0x28, 0x55, 0x97, 0x1a, 0x54, 0x93, 0x99, 0x5b, 0x9f,
	0x75, 0x9d, 0x95, 0xe4, 0x89, 0x9b, 0x1f, 0x46, 0x3f, 0xa6, 0x91, 0xe9, 0x75, 0x9b, 0x3e, 0x25,
	0x98, 0x8f, 0xfb, 0x01, 0xee, 0x24, 0x20, 0x37, 0x1f, 0xe5, 0x6c, 0xc0, 0x9a, 0x39, 0x27, 0x9d,
	0xf6, 0x29, 0x54, 0x8f, 0xa3, 0x2e, 0xbe, 0xf4, 0xf1, 0x67, 0x95, 0xe7, 0x77, 0xc9, 0x22, 0x16,
	0x6b, 0x7e, 0xdd, 0xa0, 0x2a, 0x10, 0x92, 0x4c, 0xe1, 0xd9, 0xf1, 0xa4, 0xd8, 0xb4, 0xc2, 0x7b,
	0x40, 0xad, 0xa8, 0xd7, 0x0f, 0xbc, 0xf8, 0x81, 0x44, 0x16, 0x61, 0x3e, 0x45, 0xa8, 0x75, 0x7e,
	0x2f, 0xc0, 0xcc, 0x3b, 0xfc, 0xf9, 0x61, 0x44, 0xd0, 0x9e, 0xda, 0x98, 0x13, 0x43, 0xc7, 0xb3,
	0x0a, 0x64, 0xf3, 0x32, 0x4c, 0x60, 0xd9, 0xd1, 0x2f, 0x33, 0xd0, 0x59, 0x0d, 0x60, 0xe1, 0x5d,
	0x44, 0xfd, 0x6b, 0xbf, 0xed, 0xb1, 0x23, 0x4f, 0x6f, 0x92, 0x26, 0x4c, 0x67, 0xc6, 0x47, 0x24,
	0x98, 0xc6, 0xb9, 0xd9, 0x28, 0x64, 0xc3, 0x13, 0x76, 0x9e, 0x9e, 0x63, 0x1c, 0xf2, 0x25, 0x52,
	0x74, 0xf5, 0x3b, 0x5b, 0xaa, 0x19, 0x70, 0xea, 0x3a, 0xb2, 0xf2, 0x3e, 0xbc, 0x62, 0x8e, 0x25,
	0xef, 0x02, 0x38, 0xbb, 0x81, 0x6b, 0x50, 0xcd, 0xcd, 0xab, 0x85, 0x9a, 0x1b, 0x76, 0xd6, 0x61,
	0xd5, 0xc8, 0xa4, 0xa5, 0x9a, 0xb0, 0x7c, 0x16, 0x75, 0xce, 0xa2, 0x0e, 0x6e, 0x86, 0xde, 0x55,
	0x80, 0x3b, 0x59, 0xa5, 0x6d, 0x98, 0xc9, 0x4e, 0x4b, 0xa1, 0xdc, 0xa8, 0xb3, 0x06, 0x2b, 0x26,
	0x1a, 0x2d, 0x73, 0x0b, 0xaf, 0x9a, 0xb7, 0x14, 0xc7, 0xa1, 0x17, 0x1c, 0xf2, 0x5d, 0x4e, 0xf7,
	0xfb, 0x34, 0x62, 0x12, 0x47, 0x3e, 0x31, 0xe8, 0x1e, 0xc3, 0xfa, 0x1d, 0x78, 0x99, 0xc8, 0x5d,
	0x30, 0xa7, 0x01, 0x3b, 0xf7, 0x52, 0x4e, 0x7c, 0x62, 0x02, 0xe6, 0xcf, 0xb1, 0x17, 0xb7, 0x6f,
	0x5c, 0x4c, 0xfa, 0x01, 0x55, 0x29, 0xb1, 0x4b, 0x18, 0x1f, 0xe6, 0x77, 0xa0, 0x82, 0xbc, 0x84,
	0xe9, 0x11, 0xf4, 0xad, 0x3e, 0x88, 0xc4, 0x8a, 0x5c, 0x33, 0xac, 0x14, 0xc3, 0x8d, 0x31, 0xbd,
	0x07, 0x8a, 0xff, 0x77, 0x0f, 0x4c, 0xde, 0x7f, 0x0f, 0xb0, 0x20, 0x66, 0x33, 0xea, 0xf0, 0xb9,
	0xc3, 0xb1, 0x04, 0xd6, 0x79, 0x06, 0x0b, 0xe9, 0x9a, 0xa8, 0x62, 0xed, 0xfe, 0xfd, 0x04, 0xa6,
	0x0e, 0x03, 0xe6, 0x5f, 0xfb, 0xad, 0xb7, 0xe8, 0x07, 0x98, 0x56, 0x26, 0xce, 0xef, 0xd7, 0x48,
	0x9d, 0xae, 0xd9, 0xfb, 0xba, 0xfd, 0x2c, 0x3f, 0x2c, 0x4b, 0xff, 0x08, 0x1d, 0x41, 0xf5, 0x08,
	0x07, 0xfe, 0x27, 0x1c, 0xab, 0x5b, 0x34, 0x52, 0xe0, 0xdc, 0x05, 0xdd, 0x7e, 0x3e, 0x34, 0xae,
	0x59, 0x5a, 0x30, 0x77, 0x3e, 0x74, 0x90, 0x2c, 0x67, 0xf1, 0x99, 0xf5, 0x66, 0xaf, 0x98, 0x26,
	0x53, 0x8c, 0x1f, 0xc1, 0x4e, 0x31, 0xe6, 0xbc, 0x1a, 0x6d, 0x65, 0xa3, 0xcd, 0xc7, 0x8b, 0xfd,
	0x62, 0x24, 0x2a, 0x25, 0xb6, 0x0f, 0x4f, 0x99, 0x98, 0x32, 0x6a, 0x5d, 0x81, 0xdc, 0x39, 0xa0,
	0x2b, 0x30, 0xe4, 0xe8, 0x8f, 0xd0, 0x4f, 0x50, 0x65, 0x14, 0x29, 0x1b, 0x46, 0xea, 0xda, 0x30,
	0xec, 0xf5, 0xb6, 0x3d, 0x3c, 0x95, 0xe2, 0x7a, 0x0d, 0x15, 0xc6, 0x25, 0x8d, 0x53, 0xf7, 0x34,
	0x6b, 0xe5, 0xba, 0xa7, 0x79, 0x7f, 0xd5, 0xdd, 0xc8, 0xfa, 0xa2, 0xea, 0x86, 0xc9, 0x7b, 0x75,
	0x37, 0xcc, 0xee, 0xf8, 0x08, 0xdd, 0xc0, 0x12, 0x63, 0x34, 0x3a, 0x1b, 0xda, 0x94, 0xc1, 0xa3,
	0x1c, 0xd4, 0xde, 0x1a, 0x05, 0x4a, 0x29, 0x61, 0xb0, 0x98, 0x92, 0xc9, 0xdb, 0x90, 0x23, 0x39,
	0x46, 0xf8, 0xa7, 0xbd, 0x39, 0x02, 0x93, 0x92, 0xf9, 0xb3, 0x00, 0x2f, 0x99, 0xce, 0xbd, 0x9c,
	0x0a, 0xed, 0x49, 0xd2, 0x71, 0x1c, 0xd5, 0xfe, 0x7a, 0x9c, 0xa0, 0x54, 0x6a, 0x67, 0x30, 0xcb,
	0x32, 0x4b, 0xef, 0x7e, 0xa4, 0xd6, 0x8b, 0xc1, 0x26, 0xed, 0x65, 0xc3, 0x5c, 0x42, 0x77, 0xf0,
	0xc5, 0x2f, 0xeb, 0x1e, 0xa6, 0x37, 0x38, 0xde, 0x69, 0x47, 0x31, 0x6e, 0x88, 0xe7, 0x06, 0xff,
	0xc3, 0x9e, 0x88, 0x7f, 0x0e, 0x5c, 0x95, 0xf9, 0xdb, 0xde, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x2d, 0x71, 0x3c, 0x77, 0x32, 0x10, 0x00, 0x00,
}
